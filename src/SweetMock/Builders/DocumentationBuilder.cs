// ReSharper disable EnforceIfStatementBraces
// ReSharper disable HeuristicUnreachableCode
namespace SweetMock.Builders;

using System;
using Microsoft.CodeAnalysis;
using Utils;

internal static class DocumentationBuilder
{
    private const bool Disable = true;

    public static CodeBuilder AddSummary(this CodeBuilder source, params string[] summaries)
    {
        if (Disable) return source;

        source.Add("/// <summary>");
        foreach (var summary in summaries)
        {
            source.Add("///    " + summary);
        }
        source.Add("/// </summary>");
        return source;
    }

    public static CodeBuilder AddParameter(this CodeBuilder source, string name, string description, bool condition = true)
    {
        if (Disable || !condition) return source;

        return source.Add($"/// <param name=\"{name}\">{description}</param>");
    }

    public static CodeBuilder AddReturns(this CodeBuilder source, string description)
    {
        if (Disable) return source;

        return source.Add($"/// <returns>{description}</returns>");
    }

    public static CodeBuilder AddReturns(this CodeBuilder source, ISymbol returnType)
    {
        if (Disable) return source;

        return source.Add($"/// <returns>{returnType.ToCRef()}</returns>");
    }

    public static CodeBuilder AddFileHeader(this CodeBuilder source)
    {
        if (Disable) return source;

        return source.Add($"// Generated by SweetMock {SourceGeneratorMetadata.Version} on {DateTimeOffset.Now:u}");
    }

    public static CodeBuilder AddGeneratedCodeAttrib(this CodeBuilder source) =>
        source.Add($"[System.CodeDom.Compiler.GeneratedCode(\"SweetMock\",\"{SourceGeneratorMetadata.Version}\")]");

    public static SurroundingCodeBuilder AddToConfig(this CodeBuilder source) => new(source, "internal partial class Config {", "}");
}
