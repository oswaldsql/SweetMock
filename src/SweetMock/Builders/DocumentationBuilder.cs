namespace SweetMock.Builders;

using System;
using Microsoft.CodeAnalysis;
using Utils;

internal static class DocumentationBuilder
{
    private const bool disable = false;

    public static CodeBuilder AddSummary(this CodeBuilder source, string summary)
    {
        if (disable) return source;

        source.Add("/// <summary>");
        source.Add("///    " + summary);
        source.Add("/// </summary>");
        return source;
    }

    public static CodeBuilder AddParameter(this CodeBuilder source, string name, string description, bool condition = true)
    {
        if (disable || !condition) return source;

        return source.Add($"/// <param name=\"{name}\">{description}</param>");
    }

    public static CodeBuilder AddReturns(this CodeBuilder source, string description)
    {
        if (disable) return source;

        return source.Add($"/// <returns>{description}</returns>");
    }

    public static CodeBuilder AddReturns(this CodeBuilder source, ISymbol returnType)
    {
        if (disable) return source;

        return source.Add($"/// <returns>{returnType.ToCRef()}</returns>");
    }

    public static CodeBuilder AddFileHeader(this CodeBuilder source)
    {
        if (disable) return source;

        return source.Add($"// Generated by SweetMock {SourceGeneratorMetadata.Version} on {DateTimeOffset.Now:u}");
    }

    public static SurroundingCodeBuilder AddToConfig(this CodeBuilder source) => new(source, "internal partial class Config {", "}");
}
